document is the property of object window.
document is the page which can be open in browser.
for example:-
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Frontend Roadmap</title>
    <script src="script.js" defer></script>
  </head>
  <body style="font-family: sans-serif">
    <h1>Frondend Development</h1>
    <hr />
    <p> 
      <b>Frontend development</b> is the development of the
      <a
        href="https://en.wikipedia.org/wiki/Graphical_user_interface"
        target="_blank"
        title="Graphical user interface"
        >graphical user interface</a
      >
      of a website, through the use of
      <a target="_blank" href="https://en.wikipedia.org/wiki/HTML">HTML</a>,
      <a target="_blank" href="https://en.wikipedia.org/wiki/CSS">CSS</a>, and
      <a target="_blank" href="https://en.wikipedia.org/wiki/JavaScript"
        >JavaScript</a
      >, so that users can view and interact with that website.
    </p>
    <img
      src="./html-css-javascript.png"
      alt="html-css-javascript"
      style="width: 100%; max-width: 600px"
      title="Frontend Roadmap"
    />

    <ul>
      <li>
        <b>HTML</b>: The HyperText Markup Language or <i>HTML</i> is the
        standard markup language for documents designed to be displayed in a web
        browser.
      </li>
      <br />
      <li>
        <b>CSS</b>: Cascading Style Sheets <i>(CSS)</i> is a style sheet
        language used for describing the presentation of a document written in a
        markup language such as HTML or XML
        <br />
        <br />
        <img
          src="./css.png"
          alt="css roadmap"
          style="width: 100%; max-width: 600px"
        />
        <ol>
          <li style="background-color: green;"><p>Pure CSS</p></li>
          <li>
            <p>Bootstrap <i>(Framework)</i></p>
          </li>
          <li>
            <p>Tailwind <i>(Framework)</i></p>
          </li>
          <li>
            <p>Sass <i>(Preprocessor)</i></p>
          </li>
        </ol>
      </li>
      <li>
        <p>
          <b>JavaScript</b>: JavaScript often abbreviated JS, is a programming
          language that is one of the core technologies of the World Wide Web,
          alongside HTML and CSS. It is use to add functionality in the website.
        </p>
        <img
          src="./javascript.png"
          alt="javascript roadmap"
          style="width: 100%; max-width: 600px"
        />

        <ol type="a">
          <li><p>Vanilla JS</p></li>
          <li><p>jQuery <i>(Library)</i></p></li>
          <li><p>React <i>(Framework)</i></p></li>
          <li><p>Angular <i>(Framework)</i></p></li>
          <li><p>Vue <i>(Framework)</i></p></li>
          <li><p>Typescript <i>(Preprocessor)</i></p></li>
        </ol>
      </li>
    </ul>

    <p style="text-align: center;">All copyrights &copy; reserved</p>
  </body>
</html>

if we write document in console then it show us all dom tree.but behind the scene it is an object.
if we check its type with typeof then we know that it an object.
we can watch it as an object with console.dir(document) in console.

note:- console.dir() is a method in JavaScript that displays an interactive list of the properties of a specified JavaScript object. It is particularly useful for inspecting the properties of complex objects, such as DOM elements.
for example:-
const element = document.getElementById('myElement');
console.dir(element);
This will display the properties of the element object in the console, allowing you to explore its structure and values.

document has its property 'all' in which it shows all its elements in unorder form.it has also a property children it show its children.it children also has property children which show its children.and its childrent also has its property children.which also shows its children.
note:- live server etension add extra children of script in dom.

every html element is store in object form in document object.
one parent may has many childrens.each child element has propert parent in wich he show his parent.
we can store any object property with on rightclick on propert and click on last option "store as global varialbe".
object is created correnponsing to each element of object that is creted by html parser.
our browser has component called html parser which understand our html elements and create an object in js memory.
all the things which we write in html are shown in object not anthing will be miss.
we can excess and also modify any element with its object.
like  document.children[0].children[0] or also direct way like document.body.
we canexcess and element like  document.children[0].children[1].children[0] change like document.children[0].children[1].children[0].innerText="backend development"
or document.body.children[0].innerText="backend development".
note:- console.dir() has return value undefined.
we can watch any element's object's properties with console.dir(document.body.children[0]) 

Q:-what is diff b/w innerText and innerContent?
Ans:// innerText vs textContent:
// innerText returns the visible text contained in a node, while textContent returns the full text content of the node, including hidden elements.
// innerText triggers a reflow to ensure up-to-date information, while textContent does not.
window object represned entire tab of browser.
window.document reprent viewport in which our webiste is displaying.
we can also store any element's object in variable.
